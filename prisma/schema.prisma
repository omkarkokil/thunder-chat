// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String? 
  email String? @unique
  emailVerfied DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt 

  conversationIds String[] @db.ObjectId
  conversations Conversations[] @relation(fields: [conversationIds] , references: [id] )

  seenMessageIds String[] @db.ObjectId
  seenMessage Message[] @relation("Seen" ,fields: [seenMessageIds] , references: [id] )

  accounts Account[]
  messages Message[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversations{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    UpdatedAt DateTime @updatedAt 
    lastMessageAt DateTime @default(now())
    name String? 
    isGroup Boolean?

    userIds String[] @db.ObjectId
    users User[] @relation(fields: [userIds] , references: [id])

    messageIds String[] @db.ObjectId
    message Message[]
}

model Message{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  image String?
  createdAt DateTime @default(now())

  seenIds String[] @db.ObjectId
  seen User[] @relation("Seen" , fields: [seenIds] , references: [id])

  conversationIds String @db.ObjectId
  conversation Conversations @relation(fields: [conversationIds] , references: [id])

  senderId String @db.ObjectId
  senders User @relation(fields: [senderId] , references: [id])
}
